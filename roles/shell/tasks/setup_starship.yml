---

- name: Download starship install script
  ansible.builtin.get_url:
    url: "https://starship.rs/install.sh"
    dest: "/tmp/install_starship.sh"
    mode: '0755'

- name: Install starship
  become: yes
  ansible.builtin.command: /tmp/install_starship.sh --yes
  changed_when: true

- name: Set shell info
  ansible.builtin.set_fact:
    shell_info: "{{ ansible_user_shell | shell_config }}"

- name: Setup starship
  ansible.builtin.lineinfile:
    path: "{{ ansible_user_dir }}/{{ shell_info.rc_file }}"
    regexp: "^eval \"$(starship init {{ shell_info.name }})\""
    line: "eval \"$(starship init {{ shell_info.name }})\""

- name: Create starship config file
  ansible.builtin.copy:
    src: starship.toml
    dest: "{{ ansible_user_dir }}/.config/starship.toml"
    mode: '0644'

- name: Set window title for bash
  ansible.builtin.blockinfile:
    path: "{{ ansible_user_dir }}/{{ shell_info.rc_file }}"
    marker: "# {mark} ANSIBLE MANAGED BLOCK shell wintitle"
    block: |
      function set_win_title(){
        local current_path="$PWD"
        if [[ "$current_path" == "$HOME" ]]; then
          current_path="~"
        elif [[ "$current_path" == "$HOME"/* ]]; then
          current_path="~${current_path#$HOME}"
        fi
        echo -ne "\033]0;${USER}@${HOSTNAME}: ${current_path}\007"
      }
      starship_precmd_user_func="set_win_title"
  when: ansible_user_shel == '/bin/bash'
